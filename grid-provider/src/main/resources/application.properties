# Spring boot application
spring.application.name = winsion-net-grid-provider
server.port = 9421

# DemoService service version
demo.service.version = 1.0.0

# Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.Service
dubbo.scan.basePackages  = com.station.grid.provider.core.service
# Dubbo Config properties
## ApplicationConfig Bean
dubbo.application.id = winsion-net-grid-provider
dubbo.application.name = dwinsion-net-grid-provider
dubbo.application.qos.port=22222
dubbo.application.qos.enable=true

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 12345
dubbo.protocol.status = server
dubbo.protocol.server=tomcat
dubbo.provider.timeout=5000

## RegistryConfig Bean
dubbo.registry.id = grid-provider-registry
dubbo.registry.address = zookeeper://127.0.0.1:2181


# Enables Dubbo All Endpoints
management.endpoint.dubbo.enabled = true
management.endpoint.dubbo-shutdown.enabled = true
management.endpoint.dubbo-configs.enabled = true
management.endpoint.dubbo-services.enabled = true
management.endpoint.dubbo-references.enabled = true
management.endpoint.dubbo-properties.enabled = true

# Dubbo Health
## StatusChecker Name defaults (default : "memory", "load" )
management.health.dubbo.status.defaults = memory
## StatusChecker Name extras (default : empty )
management.health.dubbo.status.extras = load,threadpool

# Mysql Datasource configuration
# spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testdb?characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.sql-script-encoding=UTF-8

# Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.Service
spring.datasource.druid.aop-patterns=com.station.grid.provider.core.*

#Druid 数据源配置，继承spring.datasource.* 配置，相同则覆盖
spring.datasource.druid.initial-size=16
spring.datasource.druid.max-active=256
spring.datasource.druid.min-idle=16
spring.datasource.druid.max-wait=60000
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements= #等价于上面的max-pool-prepared-statement-per-connection-size
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.validation-query-timeout=1
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300001
spring.datasource.druid.async-close-connection-enable=true

# 自定义StatFilter 配置 其他 Filter 不再演示
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

# JPA
spring.jpa.database=mysql
spring.jpa.show-sql= true
# spring.jpa.hibernate.ddl-auto=create-drop


spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE


# 更多配置属性见 DruidDataSource 内成员变量（只要有set方法便支持），或者根据IDE提示，或者查看官方文档
